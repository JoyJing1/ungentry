ylab("Gentrification Stage Score (Partial Residual)")
newdata3 <- with(modeldata1, data.frame(gent95 = mean(gent95),
hisp95 = mean(hisp95),
poverty95 = mean(poverty95),
own95 = mean(own95),
vacancy95 = mean(vacancy95),
lhom9597 = mean(lhom9597),
sso2edis = mean(sso2edis),
tebdis1 = mean(tebdis1),
nhwh95 =seq(0, 1, 0.01)))
fits <- predict(gamggowhhisp, newdata = newdata3, type = 'response', se = T)
predicts <- data.frame(newdata3, fits)
ggplot(data = predicts, aes(x = nhwh95, y = fit)) +
geom_smooth(aes(ymin = fit - 1.96 * se.fit,
ymax = fit + 1.96 * se.fit),
stat = "identity", color = 5) +
xlab("Proportion Non-Hispanic White, 1995") +
ylab("Gentrification Stage Score (Partial Residual)") + theme_bw()
newdata2 <- with(modeldata1, data.frame(gent95 = mean(gent95),
hisp95 = seq(0, 1, .001),
poverty95 = mean(poverty95),
own95 = mean(own95),
vacancy95 = mean(vacancy95),
lhom9597 = mean(lhom9597),
sso2edis = mean(sso2edis),
tebdis1 = mean(tebdis1),
nhbl95 = mean(nhbl95)))
fits <- predict(gamggoblhisp, newdata = newdata2, type = 'response', se = T)
predicts <- data.frame(newdata2, fits)
ggplot(data = predicts, aes(x = hisp95, y = fit)) +
geom_smooth(aes(ymin = fit - 1.96 * se.fit,
ymax = fit + 1.96 * se.fit),
stat = "identity", color = 4) +
xlab("Proportion Hispanic, 1995") +
ylab("Gentrification Stage Score (Partial Residual)") + theme_bw()
newdata1 <- with(modeldata1, data.frame(gent95 = mean(gent95),
hisp95 = mean(hisp95),
poverty95 = mean(poverty95),
own95 = mean(own95),
vacancy95 = mean(vacancy95),
lhom9597 = mean(lhom9597),
sso2edis = mean(sso2edis),
tebdis1 = mean(tebdis1),
nhbl95 = seq(0, 1, .001)))
fits <- predict(gamggoblhisp, newdata = newdata1, type = 'response', se = T)
predicts <- data.frame(newdata1, fits)
ggplot(data = predicts, aes(x = nhbl95, y = fit)) +
geom_smooth(aes(ymin = fit - 1.96 * se.fit,
ymax = fit + 1.96 * se.fit),
stat = "identity", color = 3) +
xlab("Proportion Non-Hispanic Black, 1995") +
ylab("Gentrification Stage Score (Partial Residual)") + theme_bw()
newdata1 <- with(modeldata1, data.frame(gent95 = mean(gent95),
hisp95 = mean(hisp95),
poverty95 = mean(poverty95),
own95 = mean(own95),
vacancy95 = mean(vacancy95),
lhom9597 = mean(lhom9597),
sso2edis = mean(sso2edis),
tebdis1 = mean(tebdis1),
nhbl95 = seq(0, 1, .001)))
fits <- predict(gamggoblhisp, newdata = newdata1, type = 'response', se = T)
predicts <- data.frame(newdata1, fits)
ggplot(data = predicts, aes(x = nhbl95, y = fit)) +
geom_smooth(aes(ymin = fit - 1.96 * se.fit,
ymax = fit + 1.96 * se.fit),
stat = "identity", color = 3) +
xlab("Proportion Non-Hispanic Black, 1995", size = 20) +
ylab("Gentrification Stage Score (Partial Residual)", size = 20) + theme_b
ggplot(data = predicts, aes(x = nhbl95, y = fit)) +
geom_smooth(aes(ymin = fit - 1.96 * se.fit,
ymax = fit + 1.96 * se.fit),
stat = "identity", color = 3) +
xlab("Proportion Non-Hispanic Black, 1995") +
ylab("Gentrification Stage Score (Partial Residual)") + theme_bw() +
theme(axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20))
# plot gam results
newdata1 <- with(modeldata1, data.frame(gent95 = mean(gent95),
hisp95 = mean(hisp95),
poverty95 = mean(poverty95),
own95 = mean(own95),
vacancy95 = mean(vacancy95),
lhom9597 = mean(lhom9597),
sso2edis = mean(sso2edis),
tebdis1 = mean(tebdis1),
nhbl95 = seq(0, 1, .001)))
fits <- predict(gamggoblhisp, newdata = newdata1, type = 'response', se = T)
predicts <- data.frame(newdata1, fits)
ggplot(data = predicts, aes(x = nhbl95, y = fit)) +
geom_smooth(aes(ymin = fit - 1.96 * se.fit,
ymax = fit + 1.96 * se.fit),
stat = "identity", color = 3) +
xlab("Proportion Non-Hispanic Black, 1995") +
ylab("Gentrification Stage Score (Partial Residual)") + theme_bw() +
theme(axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20))
newdata2 <- with(modeldata1, data.frame(gent95 = mean(gent95),
hisp95 = seq(0, 1, .001),
poverty95 = mean(poverty95),
own95 = mean(own95),
vacancy95 = mean(vacancy95),
lhom9597 = mean(lhom9597),
sso2edis = mean(sso2edis),
tebdis1 = mean(tebdis1),
nhbl95 = mean(nhbl95)))
fits <- predict(gamggoblhisp, newdata = newdata2, type = 'response', se = T)
predicts <- data.frame(newdata2, fits)
ggplot(data = predicts, aes(x = hisp95, y = fit)) +
geom_smooth(aes(ymin = fit - 1.96 * se.fit,
ymax = fit + 1.96 * se.fit),
stat = "identity", color = 4) +
xlab("Proportion Hispanic, 1995") +
ylab("Gentrification Stage Score (Partial Residual)") + theme_bw() +
theme(axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20))
newdata3 <- with(modeldata1, data.frame(gent95 = mean(gent95),
hisp95 = mean(hisp95),
poverty95 = mean(poverty95),
own95 = mean(own95),
vacancy95 = mean(vacancy95),
lhom9597 = mean(lhom9597),
sso2edis = mean(sso2edis),
tebdis1 = mean(tebdis1),
nhwh95 =seq(0, 1, 0.01)))
fits <- predict(gamggowhhisp, newdata = newdata3, type = 'response', se = T)
predicts <- data.frame(newdata3, fits)
ggplot(data = predicts, aes(x = nhwh95, y = fit)) +
geom_smooth(aes(ymin = fit - 1.96 * se.fit,
ymax = fit + 1.96 * se.fit),
stat = "identity", color = 5) +
xlab("Proportion Non-Hispanic White, 1995") +
ylab("Gentrification Stage Score (Partial Residual)") + theme_bw() +
theme(axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20))
ggplot(alldata[alldata$popu90 > 500 & alldata$popu0509 > 500, ],
aes(x = poverty90, y = poverty0509)) +
geom_point(shape = 1, size = 2) + geom_smooth(method = lm, se = FALSE) +
xlab("Poverty Rate, 1990") + ylab("Poverty Rate, 2009") + theme_bw() +
theme(axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20))
# import datasets ####
setwd("C:/Users/Jackie/Documents/GitHub/ungentry/Census1990_Boston")
dat90 <- read.csv("Census1990_Boston_pcts_2010.csv")
setwd("C:/Users/Jackie/Documents/GitHub/ungentry/Census2000_Boston")
dat00 <- read.csv("Census2000_Boston_pcts_2010.csv")
setwd("C:/Users/Jackie/Documents/GitHub/ungentry/ACS0812_Boston")
dat10 <- read.csv("ACS0812_Boston.csv")
setwd("C:/Users/Jackie/Documents/GitHub/ungentry/Census1990_Boston")
dat90 <- read.csv("Census1990_Boston_pcts_2010.csv")
names(dat10)
names(dat00)
alldat <- merge(dat90, dat00, by = "tractid", all = TRUE)
alldat <- merge(dat90, dat00, by = "tractid10", all = TRUE)
alldat <- merge(alldat, dat10, by = "tractid10", all = TRUE)
head(alldat)
?merge
alldat <- merge(dat90, dat00,
by = "tractid10", all = TRUE,
suffixes = c(".90", ".00"))
head(alldat)
names(alldat)
alldat <- merge(alldat, dat10, b
y = "tractid10", all = TRUE,
suffixes = c(y = ".10"))
alldat <- merge(alldat, dat10, b
y = "tractid10", all = TRUE,
suffixes = c("", ".10"))
alldat <- merge(alldat, dat10,
by = "tractid10", all = TRUE,
suffixes = c("", ".10"))
names(alldat)
alldat <- merge(dat90, dat00,
by = "tractid10", all = TRUE,
suffixes = c("_90", "_00"))
names(alldat)
alldat <- merge(alldat, dat10,
by = "tractid10", all = TRUE,
suffixes = c("", "_10"))
names(alldat)
names(alldat) == "totalpop_00"
which(names(alldat) == "totalpop_00")
?sub
?subtr
?substr
substr(names(alldat)[2], -3, -1)
substr(names(alldat)[i], -1, -3)
substr(names(alldat)[2], nchar(names(alldat)[2]) - 1, nchar(names(alldat)[2]))
for (i in 2:which(names(alldat) == "totalpop_00")) {
if (substr(names(alldat)[i],
nchar(names(alldat)[i]) - 1,
nchar(names(alldat)[i])) !=
"90") {
names(alldat)[i] <-
paste(names(alldat)[i],
"90",
sep = "_")
} else {
names(alldat)[i] <- names(alldat)[i]
}
}
names(allday)
names(alldat)
# import datasets ####
setwd("C:/Users/Jackie/Documents/GitHub/ungentry/Census1990_Boston")
dat90 <- read.csv("Census1990_Boston_pcts_2010.csv")
setwd("C:/Users/Jackie/Documents/GitHub/ungentry/Census2000_Boston")
dat00 <- read.csv("Census2000_Boston_pcts_2010.csv")
setwd("C:/Users/Jackie/Documents/GitHub/ungentry/ACS0812_Boston")
dat10 <- read.csv("ACS0812_Boston.csv")
# merge all data ####
alldat <- merge(dat90, dat00,
by = "tractid10", all = TRUE,
suffixes = c("_90", "_00"))
alldat <- merge(alldat, dat10,
by = "tractid10", all = TRUE,
suffixes = c("", "_10"))
# add column year labels ####
for (i in 2:(which(names(alldat) == "totalpop_00") - 1)) {
if (substr(names(alldat)[i],
nchar(names(alldat)[i]) - 1,
nchar(names(alldat)[i])) !=
"90") {
names(alldat)[i] <-
paste(names(alldat)[i],
"90",
sep = "_")
} else {
names(alldat)[i] <- names(alldat)[i]
}
}
for (i in which(names(alldat) == "totalpop_00"):
which(names(alldat) == "totalpop") - 1) {
if (substr(names(alldat)[i],
nchar(names(alldat)[i]) - 1,
nchar(names(alldat)[i])) !=
"00") {
names(alldat)[i] <-
paste(names(alldat)[i],
"00",
sep = "_")
} else {
names(alldat)[i] <- names(alldat)[i]
}
}
names(alldat)
########################################
#### Created by: Jackie Hwang 			####
#### Date: July 1, 2014 						####
#### Project: CFB-Ungentry 					####
#### Re: Merging ACS/Census Data 		####
#### using 2010 boundaries					####
########################################
# import datasets ####
setwd("C:/Users/Jackie/Documents/GitHub/ungentry/Census1990_Boston")
dat90 <- read.csv("Census1990_Boston_pcts_2010.csv")
setwd("C:/Users/Jackie/Documents/GitHub/ungentry/Census2000_Boston")
dat00 <- read.csv("Census2000_Boston_pcts_2010.csv")
setwd("C:/Users/Jackie/Documents/GitHub/ungentry/ACS0812_Boston")
dat10 <- read.csv("ACS0812_Boston.csv")
# merge all data ####
alldat <- merge(dat90, dat00,
by = "tractid10", all = TRUE,
suffixes = c("_90", "_00"))
alldat <- merge(alldat, dat10,
by = "tractid10", all = TRUE,
suffixes = c("", "_10"))
# add column year labels ####
for (i in 2:(which(names(alldat) == "totalpop_00") - 1)) {
if (substr(names(alldat)[i],
nchar(names(alldat)[i]) - 2,
nchar(names(alldat)[i])) !=
"_90") {
names(alldat)[i] <-
paste(names(alldat)[i],
"90",
sep = "_")
} else {
names(alldat)[i] <- names(alldat)[i]
}
}
for (i in which(names(alldat) == "totalpop_00"):
which(names(alldat) == "totalpop") - 1) {
if (substr(names(alldat)[i],
nchar(names(alldat)[i]) - 2,
nchar(names(alldat)[i])) !=
"_00") {
names(alldat)[i] <-
paste(names(alldat)[i],
"00",
sep = "_")
} else {
names(alldat)[i] <- names(alldat)[i]
}
}
for (i in which(names(alldat) == "totalpop"):ncol(alldat)) {
if (substr(names(alldat)[i],
nchar(names(alldat)[i]) - 2,
nchar(names(alldat)[i])) !=
"_10") {
names(alldat)[i] <-
paste(names(alldat)[i],
"10",
sep = "_")
} else {
names(alldat)[i] <- names(alldat)[i]
}
}
dim(alldat[alldat$totalpop90 == 1])
dim(alldat[alldat$totalpop90 == 0, ])
dim(alldat[alldat$totalpop_90 == 0, ])
dim(alldat[alldat$totalpop_00 == 0, ])
dim(alldat[alldat$totalpop_10 == 0, ])
dim(alldat[alldat$units_10 == 0, ])
alldat <- alldat[alldat$totalpop_90 != 0 &
alldat$totalpop_00 != 0 &
alldat$totalpop_10 ! = 0, ]
alldat <- alldat[alldat$totalpop_90 != 0 &
alldat$totalpop_00 != 0 &
alldat$totalpop_10 != 0, ]
summary(alldat$totalpop_90)
summary(alldat$totalpop_00)
summary(alldat$totalpop_10)
alldat <- alldat[alldat$totalpop_90 != 0 &
alldat$totalpop_00 != 0 &
alldat$totalpop_10 != 0 &
is.na(alldat$totalpop_90) == FALSE &
is.na(alldat$totalpop_00) == FALSE &
is.na(alldat$totalpop_10) == FALSE, ]
summary(alldat$totalpop_00)
alldat$pctinc_0_10K_90 <- alldat$pctinc_0_5K_90 + alldat$pctinc_5K_10K_90
alldat$pctinc_50K_60K_90 <- alldat$pctinc_50K_55K_90 + alldat$pctinc_55K_60K_90
names(alldat)
alldat$pctinc_0_10K_90 <- alldat$pctinc_0_5K_90 + alldat$pctinc_5K_10K_90
head(alldat$pctinc_0_5K_90 + alldat$pctinc_5K_10K_90)
alldat$pctinc_0_10k_90 <- alldat$pctinc_0_5k_90 + alldat$pctinc_5k_10k_90
alldat$pctinc_50k_60k_90 <- alldat$pctinc_50k_55k_90 + alldat$pctinc_55k_60k_90
alldat$pctinc_150k_more_10 <- alldat$pctinc_150K_200K_10 + alldat$pctinc_200K_more_10
alldat <- alldat[, !(names(alldat) %in% c("pctinc_0_5k_90", "pctinc_5k_10k_90"))]
alldat <-
alldat[, !(names(alldat) %in%
c("pctinc_150K_200K_10",
"pctinc_200K_more_10"))]
names(alldat)
# import datasets ####
setwd("C:/Users/Jackie/Documents/GitHub/ungentry/Census1990_Boston")
dat90 <- read.csv("Census1990_Boston_pcts_2010.csv")
setwd("C:/Users/Jackie/Documents/GitHub/ungentry/Census2000_Boston")
dat00 <- read.csv("Census2000_Boston_pcts_2010.csv")
setwd("C:/Users/Jackie/Documents/GitHub/ungentry/ACS0812_Boston")
dat10 <- read.csv("ACS0812_Boston.csv")
# merge all data ####
alldat <- merge(dat90, dat00,
by = "tractid10", all = TRUE,
suffixes = c("_90", "_00"))
alldat <- merge(alldat, dat10,
by = "tractid10", all = TRUE,
suffixes = c("", "_10"))
# add column year labels ####
for (i in 2:(which(names(alldat) == "totalpop_00") - 1)) {
if (substr(names(alldat)[i],
nchar(names(alldat)[i]) - 2,
nchar(names(alldat)[i])) !=
"_90") {
names(alldat)[i] <-
paste(names(alldat)[i],
"90",
sep = "_")
} else {
names(alldat)[i] <- names(alldat)[i]
}
}
for (i in which(names(alldat) == "totalpop_00"):
which(names(alldat) == "totalpop") - 1) {
if (substr(names(alldat)[i],
nchar(names(alldat)[i]) - 2,
nchar(names(alldat)[i])) !=
"_00") {
names(alldat)[i] <-
paste(names(alldat)[i],
"00",
sep = "_")
} else {
names(alldat)[i] <- names(alldat)[i]
}
}
for (i in which(names(alldat) == "totalpop"):ncol(alldat)) {
if (substr(names(alldat)[i],
nchar(names(alldat)[i]) - 2,
nchar(names(alldat)[i])) !=
"_10") {
names(alldat)[i] <-
paste(names(alldat)[i],
"10",
sep = "_")
} else {
names(alldat)[i] <- names(alldat)[i]
}
}
names(alldat)
########################################
#### Created by: Jackie Hwang 			####
#### Date: July 1, 2014 						####
#### Project: CFB-Ungentry 					####
#### Re: Merging ACS/Census Data 		####
#### using 2010 boundaries					####
########################################
# import datasets ####
setwd("C:/Users/Jackie/Documents/GitHub/ungentry/Census1990_Boston")
dat90 <- read.csv("Census1990_Boston_pcts_2010.csv")
setwd("C:/Users/Jackie/Documents/GitHub/ungentry/Census2000_Boston")
dat00 <- read.csv("Census2000_Boston_pcts_2010.csv")
setwd("C:/Users/Jackie/Documents/GitHub/ungentry/ACS0812_Boston")
dat10 <- read.csv("ACS0812_Boston.csv")
# merge all data ####
alldat <- merge(dat90, dat00,
by = "tractid10", all = TRUE,
suffixes = c("_90", "_00"))
alldat <- merge(alldat, dat10,
by = "tractid10", all = TRUE,
suffixes = c("", "_10"))
names(alldat)
200K_more_10
which(names(alldat) == "totalpop_00")
which(names(alldat) == "totalpop") - 1
for (i in 2:(which(names(alldat) == "totalpop_00") - 1)) {
if (substr(names(alldat)[i],
nchar(names(alldat)[i]) - 2,
nchar(names(alldat)[i])) !=
"_90") {
names(alldat)[i] <-
paste(names(alldat)[i],
"90",
sep = "_")
} else {
names(alldat)[i] <- names(alldat)[i]
}
}
names(alldat)
for (i in (which(names(alldat) == "totalpop_00")):
(which(names(alldat) == "totalpop") - 1)) {
if (substr(names(alldat)[i],
nchar(names(alldat)[i]) - 2,
nchar(names(alldat)[i])) !=
"_00") {
names(alldat)[i] <-
paste(names(alldat)[i],
"00",
sep = "_")
} else {
names(alldat)[i] <- names(alldat)[i]
}
}
names(alldat)
for (i in (which(names(alldat) == "totalpop")):ncol(alldat)) {
if (substr(names(alldat)[i],
nchar(names(alldat)[i]) - 2,
nchar(names(alldat)[i])) !=
"_10") {
names(alldat)[i] <-
paste(names(alldat)[i],
"10",
sep = "_")
} else {
names(alldat)[i] <- names(alldat)[i]
}
}
names(alldat)
# drop tracts with no population
alldat <- alldat[alldat$totalpop_90 != 0 &
alldat$totalpop_00 != 0 &
alldat$totalpop_10 != 0 &
is.na(alldat$totalpop_90) == FALSE &
is.na(alldat$totalpop_00) == FALSE &
is.na(alldat$totalpop_10) == FALSE, ]
# create common variables where possible and reorder ####
alldat$pctinc_0_10k_90 <-
alldat$pctinc_0_5k_90 +
alldat$pctinc_5k_10k_90
alldat <-
alldat[, !(names(alldat) %in%
c("pctinc_0_5k_90",
"pctinc_5k_10k_90"))]
alldat$pctinc_50k_60k_90 <-
alldat$pctinc_50k_55k_90 +
alldat$pctinc_55k_60k_90
alldat <-
alldat[, !(names(alldat) %in%
c("pctinc_50k_55k_90",
"pctinc_55k_60k_90"))]
alldat$pctinc_150k_more_10 <-
alldat$pctinc_150K_200K_10 +
alldat$pctinc_200K_more_10
alldat <-
alldat[, !(names(alldat) %in%
c("pctinc_150K_200K_10",
"pctinc_200K_more_10"))]
# correct acs data to 2013 adjusted values ####
alldat$medhhincome_10 <- alldat$medhhincome_10 * 1.01
alldat$medianvalue_10 <- alldat$medianvalue_10 * 1.01
alldat$medianrent_10 <- alldat$medianrent_10 * 1.01
names(alldat)
alldat <- alldat(1, 2:13, 133:134, 14:41,
42:86,
87:108, 135, 109:132)
alldat <- alldat[, c(1, 2:13, 133:134, 14:41,
42:86,
87:108, 135, 109:132)]
setwd("C:/Users/Jackie/Documents/GitHub/ungentry")
setwd("C:/Users/Jackie/Documents/GitHub/ungentry")
write.csv(alldat, file = "allcensusacsdata_2010boundaries.csv",
row.names = FALSE, na = '')
