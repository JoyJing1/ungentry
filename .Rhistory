theme_bw()
newdata1 <- with(modeldata1, data.frame(gent95 = mean(gent95),
hisp95 = seq(0, 1, .001),
poverty95 = mean(poverty95),
own95 = mean(own95),
vacancy95 = mean(vacancy95),
lhom9597 = mean(lhom9597),
sso2edis = mean(sso2edis),
tebdis1 = mean(tebdis1),
nhbl95 = mean(nhbl95)))
newdata1$cpb2_95 <- (newdata1$nhbl95 - mean(newdata1$nhbl95))^2
newdata2 <- cbind(newdata1, predict(out, newdata = newdata1, se = TRUE))
newdata2 <- within(newdata2, {
PredictedProb <- pnorm(fit)
lower <- pnorm(fit - (1.96 * se.fit))
upper <- pnorm(fit + (1.96 * se.fit))
})
ggplot(newdata2, aes(x = hisp95, y = PredictedProb)) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.2) +
geom_line(aes(x = hisp95, y = PredictedProb), color = 3) +
xlab("% Hispanic, 1995") + ylab("Predicated Gentrification Score, 2007-2009") +
theme_bw()
# make figure 5 in ggplot form ####
library("mgcv")
wts <- as.vector(sqrt(modeldata1$nblocks))
gamggoblhisp <- gam(zstage_noclient~s(nhbl95)+s(hisp95)+gent95+poverty95+own95+vacancy95+lhom9597+sso2edis+tebdis1,data=modeldata1, weights=wts, gamma=1.4)
summary(gamggoblhisp)
plot(gamggoblhisp, residuals=T) ##both hisp (2.14) and bl (2.17) are nonlinear
summary(gamggobl)
plot(gamggobl, residuals=T,ylim=c(-2,2)) ##bl sig=1.84
gamggowhhisp <- gam(zstage_noclient~s(nhwh95)+s(hisp95)+gent95+poverty95+own95+vacancy95+lhom9597+sso2edis+tebdis1,data=modeldata1, weights=wts, gamma=1.4)
summary(gamggowhhisp)
plot(gamggowhhisp, residuals=T,ylim=c(-2,2)) #wh=2.66 and hisp=1.98 both nonlinear
summary(gamggowh)
plot(gamggowh, residuals=T,ylim=c(-2,2)) #wh sig=2.55
# plot gam results
newdata1 <- with(modeldata1, data.frame(gent95 = mean(gent95),
hisp95 = mean(hisp95),
poverty95 = mean(poverty95),
own95 = mean(own95),
vacancy95 = mean(vacancy95),
lhom9597 = mean(lhom9597),
sso2edis = mean(sso2edis),
tebdis1 = mean(tebdis1),
nhbl95 = seq(0, 1, .001)))
fits <- predict(gamggoblhisp, newdata = newdata1, type = 'response', se = T)
predicts <- data.frame(newdata1, fits)
ggplot(data = predicts, aes(x = nhbl95, y = fit)) +
geom_smooth(aes(ymin = fit - 1.96 * se.fit,
ymax = fit + 1.96 * se.fit),
stat = "identity", color = 3, size = 1.25, fill = "palegreen1") +
xlab("Proportion Non-Hispanic Black, 1995") +
ylab("Gentrification Stage Score (Partial Residual)") + theme_bw() +
theme(axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20))
newdata2 <- with(modeldata1, data.frame(gent95 = mean(gent95),
hisp95 = seq(0, 1, .001),
poverty95 = mean(poverty95),
own95 = mean(own95),
vacancy95 = mean(vacancy95),
lhom9597 = mean(lhom9597),
sso2edis = mean(sso2edis),
tebdis1 = mean(tebdis1),
nhbl95 = mean(nhbl95)))
fits <- predict(gamggoblhisp, newdata = newdata2, type = 'response', se = T)
predicts <- data.frame(newdata2, fits)
ggplot(data = predicts, aes(x = hisp95, y = fit)) +
geom_smooth(aes(ymin = fit - 1.96 * se.fit,
ymax = fit + 1.96 * se.fit),
stat = "identity", color = 4) +
xlab("Proportion Hispanic, 1995") +
ylab("Gentrification Stage Score (Partial Residual)") + theme_bw() +
theme(axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20))
newdata3 <- with(modeldata1, data.frame(gent95 = mean(gent95),
hisp95 = mean(hisp95),
poverty95 = mean(poverty95),
own95 = mean(own95),
vacancy95 = mean(vacancy95),
lhom9597 = mean(lhom9597),
sso2edis = mean(sso2edis),
tebdis1 = mean(tebdis1),
nhwh95 =seq(0, 1, 0.01)))
fits <- predict(gamggowhhisp, newdata = newdata3, type = 'response', se = T)
predicts <- data.frame(newdata3, fits)
ggplot(data = predicts, aes(x = nhwh95, y = fit)) +
geom_smooth(aes(ymin = fit - 1.96 * se.fit,
ymax = fit + 1.96 * se.fit),
stat = "identity", color = 2, size = 1.25, fill = "lightcoral") +
xlab("Proportion Non-Hispanic White, 1995") +
ylab("Gentrification Stage Score (Partial Residual)") + theme_bw() +
theme(axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20))
fig1data <- cbind(alldata$tractid[alldata$popu90 > 500 &
alldata$popu0509 > 500],
alldata$poverty90[alldata$popu90 > 500 &
alldata$popu0509 > 500],
alldata$poverty0509[alldata$popu90 > 500 &
alldata$popu0509 > 500])
fig1data <- as.data.frame(cbind(alldata$tractid[alldata$popu90 > 500 &
alldata$popu0509 > 500],
alldata$poverty90[alldata$popu90 > 500 &
alldata$popu0509 > 500],
alldata$poverty0509[alldata$popu90 > 500 &
alldata$popu0509 > 500]))
head(fig1data)
names(fig1data) <- c("tractid", "poverty90", "poverty0509")
head(fig1data)
?write.xls
?write
library("xlsx")
install.packages("xlsx")
library("xlsx")
install.packages("xlsx")
library("xlsx")
install.packages("WriteXLS")
library("WriteXLS")
alldata[alldata$popu90 > 1000 &
alldata$popu0509 > 1000]
dim(alldata[alldata$popu90 > 1000 &
alldata$popu0509 > 1000, ])
dim(alldata[alldata$popu90 > 500 &
alldata$popu0509 > 500, ])
ggplot(alldata[alldata$popu90 > 1000 & alldata$popu0509 > 1000, ],
aes(x = poverty90, y = poverty0509)) +
geom_point(shape = 16, size = 2, color = "coral1") + geom_smooth(method = lm, se = FALSE, size = 1.25, color = "dodgerblue3") +
xlab("Poverty Rate, 1990") + ylab("Poverty Rate, 2009") + theme_bw() +
theme(axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20))
setwd("C:/Users/Jackie/Dropbox/Gentrification and Race/Pathways Drafts/ASR Publication/Media/")
fig1data <- as.data.frame(cbind(alldata$tractid[alldata$popu90 > 500 &
alldata$popu0509 > 500],
alldata$poverty90[alldata$popu90 > 500 &
alldata$popu0509 > 500],
alldata$poverty0509[alldata$popu90 > 500 &
alldata$popu0509 > 500]))
names(modeldata1)
newdata1 <- with(modeldata1, data.frame(gent95 = mean(gent95),
hisp95 = mean(hisp95),
poverty95 = mean(poverty95),
own95 = mean(own95),
vacancy95 = mean(vacancy95),
lhom9597 = mean(lhom9597),
sso2edis = mean(sso2edis),
tebdis1 = mean(tebdis1),
nhbl95 = seq(0, 1, .001)))
fits <- predict(gamggoblhisp, newdata = newdata1, type = 'response', se = T)
head(fits)
predicts <- data.frame(newdata1, fits)
head(predicts)
predicts1 <- predicts[10:11]
predicts1 <- predicts
newdata3 <- with(modeldata1, data.frame(gent95 = mean(gent95),
hisp95 = mean(hisp95),
poverty95 = mean(poverty95),
own95 = mean(own95),
vacancy95 = mean(vacancy95),
lhom9597 = mean(lhom9597),
sso2edis = mean(sso2edis),
tebdis1 = mean(tebdis1),
nhwh95 =seq(0, 1, 0.01)))
fits <- predict(gamggowhhisp, newdata = newdata3, type = 'response', se = T)
predicts <- data.frame(newdata3, fits)
predicts2 <- predicts
head(predicts)
names(alldata)
fig2data <- as.data.frame(cbind(alldata$tractid, alldata$gent_1995))
head(fig2data)
names(fig2data) <- c("tractid", "gent95")
fig4adata <- predicts1
fig4bdata <- predicts2
head(fig4adata)
head(fig4bdata)
setwd("C:/Users/Jackie/Dropbox/Gentrification and Race/Pathways Drafts/ASR Publication/Media/")
WriteXLS(fig1data,
ExcelFileName = "HwangSampson_USApp_Fig1data.xls",
SheetNames = "Fig1",
row.names = FALSE, na = '')
WriteXLS(fig1data,
ExcelFileName = "HwangSampson_USApp_Fig1data.xls",
SheetNames = "Fig1",
row.names = FALSE)
WriteXLS(fig2data,
ExcelFileName = "HwangSampson_USApp_Fig2data.xls",
SheetNames = "Fig2",
row.names = FALSE)
WriteXLS(fig4adata,
ExcelFileName = "HwangSampson_USApp_Fig4adata.xls",
SheetNames = "Fig1",
row.names = FALSE)
WriteXLS(fig4bdata,
ExcelFileName = "HwangSampson_USApp_Fig4bdata.xls",
SheetNames = "Fig2",
row.names = FALSE)
WriteXLS("fig1data",
ExcelFileName = "HwangSampson_USApp_Fig1data.xls",
SheetNames = "Fig1",
row.names = FALSE)
install.packages("xlsx")
library("xlsx")
WriteXLS(fig1data,
file = "HwangSampson_USApp_Fig1data.xls",
sheetName = "Fig1",
row.names = FALSE, showNA = FALSE)
write.xlsx(fig1data,
file = "HwangSampson_USApp_Fig1data.xls",
sheetName = "Fig1",
row.names = FALSE, showNA = FALSE)
write.xlsx(fig1data,
file = "HwangSampson_USApp_Fig1data.xls",
sheetName = "Fig1",
row.names = FALSE, col.names = TRUE, showNA = FALSE)
head(fig1data)
fig1data <- as.data.frame(cbind(alldata$tractid[alldata$popu90 > 1000 &
alldata$popu0509 > 1000],
alldata$poverty90[alldata$popu90 > 1000 &
alldata$popu0509 > 1000],
alldata$poverty0509[alldata$popu90 > 1000 &
alldata$popu0509 > 1000]))
names(fig1data) <- c("tractid", "poverty90", "poverty0509")
fig2data <- as.data.frame(cbind(alldata$tractid, alldata$gent_1995))
names(fig2data) <- c("tractid", "gent95")
fig4adata <- predicts1
fig4bdata <- predicts2
write.xlsx(fig1data,
file = "HwangSampson_USApp_Fig1data.xls",
sheetName = "Fig1",
row.names = FALSE, showNA = FALSE)
write.xlsx(fig2data,
file = "HwangSampson_USApp_Fig2data.xls",
sheetName = "Fig2",
row.names = FALSE, showNA = FALSE)
write.xlsx(fig2data,
file = "HwangSampson_USApp_Fig2data.xls",
sheetName = "Fig2",
row.names = FALSE, showNA = FALSE)
write.xlsx(fig4adata,
file = "HwangSampson_USApp_Fig4adata.xls",
sheetName = "Fig4a",
row.names = FALSE, showNA = FALSE)
write.xlsx(fig4bdata,
file = "HwangSampson_USApp_Fig4bdata.xls",
sheetName = "Fig4b",
row.names = FALSE, showNA = FALSE)
setwd("C:/Users/Jackie/Documents/GitHub/ungentry/Census1990_Boston")
dat90 <- read.csv("Census1990_Boston_pcts_2010.csv")
setwd("C:/Users/Jackie/Documents/GitHub/ungentry/Census2000_Boston")
dat00 <- read.csv("Census2000_Boston_pcts_2010.csv")
setwd("C:/Users/Jackie/Documents/GitHub/ungentry/ACS0812_Boston")
dat10 <- read.csv("ACS0812_Boston.csv")
# merge all data ####
alldat <- merge(dat90, dat00,
by = "tractid10", all = TRUE,
suffixes = c("_90", "_00"))
alldat <- merge(alldat, dat10,
by = "tractid10", all = TRUE,
suffixes = c("", "_10"))
length(unique(alldat$tractid))
which(duplicated(alldat$tractid))
head(alldat$tractid)
alldat[, 8:10]
alldat[8:10, ]
alldat <- merge(dat90, dat00,
by = "tractid10", all = TRUE,
suffixes = c("_90", "_00"))
alldat <- merge(alldat, dat10,
by = "tractid10", all.x = TRUE,
suffixes = c("", "_10"))
dat10$totalpop[dat10$totalpop == 0] <- NA
dat10$totalpop[dat10$totalpop == 0] <- NA
dat10$households[dat10$households == 0] <- NA
head(dat10)
summary(dat10)
alldat <- merge(dat90, dat00,
by = "tractid10", all = TRUE,
suffixes = c("_90", "_00"))
alldat <- merge(alldat, dat10,
by = "tractid10", all = TRUE,
suffixes = c("", "_10"))
alldat <- merge(alldat, dat10,
by = "tractid10", all.x = TRUE,
suffixes = c("", "_10"))
alldat <- merge(dat90, dat00,
by = "tractid10", all = TRUE,
suffixes = c("_90", "_00"))
alldat <- merge(alldat, dat10,
by = "tractid10", all.x = TRUE,
suffixes = c("", "_10"))
length(unique(dat90$tractid))
head(alldat)
head(dat10)
tail(dat10)
dat10 <- dat10[!is.na(dat10[, c(2:ncol(dat10))]), ]
length(unique(dat10$tractid10))
dat10$tractid10[is.na(dat10$households) == TRUE] <- NA
dat10$tractid10[is.na(dat10$totalpop) == TRUE] <- NA
which(duplicated(dat10$tractid))
which(duplicated(dat10$tractid10))
setwd("C:/Users/Jackie/Documents/GitHub/ungentry/ACS0812_Boston")
dat10 <- read.csv("ACS0812_Boston.csv")
which(duplicated(dat10$tractid10))
dat10[19:20, ]
# import datasets ####
setwd("C:/Users/Jackie/Documents/GitHub/ungentry/Census1990_Boston")
dat90 <- read.csv("Census1990_Boston_pcts_2010.csv")
setwd("C:/Users/Jackie/Documents/GitHub/ungentry/Census2000_Boston")
dat00 <- read.csv("Census2000_Boston_pcts_2010.csv")
setwd("C:/Users/Jackie/Documents/GitHub/ungentry/ACS0812_Boston")
dat10 <- read.csv("ACS0812_Boston.csv")
length(unique(dat10$tractid10))
# merge all data ####
alldat <- merge(dat90, dat00,
by = "tractid10", all = TRUE,
suffixes = c("_90", "_00"))
alldat <- merge(alldat, dat10,
by = "tractid10", all.y = TRUE,
suffixes = c("", "_10"))
length(unique(alldat$tractid10))
# add column year labels ####
for (i in 2:(which(names(alldat) == "totalpop_00") - 1)) {
if (substr(names(alldat)[i],
nchar(names(alldat)[i]) - 2,
nchar(names(alldat)[i])) !=
"_90") {
names(alldat)[i] <-
paste(names(alldat)[i],
"90",
sep = "_")
} else {
names(alldat)[i] <- names(alldat)[i]
}
}
for (i in (which(names(alldat) == "totalpop_00")):
(which(names(alldat) == "totalpop") - 1)) {
if (substr(names(alldat)[i],
nchar(names(alldat)[i]) - 2,
nchar(names(alldat)[i])) !=
"_00") {
names(alldat)[i] <-
paste(names(alldat)[i],
"00",
sep = "_")
} else {
names(alldat)[i] <- names(alldat)[i]
}
}
for (i in (which(names(alldat) == "totalpop")):ncol(alldat)) {
if (substr(names(alldat)[i],
nchar(names(alldat)[i]) - 2,
nchar(names(alldat)[i])) !=
"_10") {
names(alldat)[i] <-
paste(names(alldat)[i],
"10",
sep = "_")
} else {
names(alldat)[i] <- names(alldat)[i]
}
}
# drop tracts with no population
alldat <- alldat[alldat$totalpop_90 != 0 &
alldat$totalpop_00 != 0 &
alldat$totalpop_10 != 0 &
is.na(alldat$totalpop_90) == FALSE &
is.na(alldat$totalpop_00) == FALSE &
is.na(alldat$totalpop_10) == FALSE, ]
# create common variables where possible and reorder ####
alldat$pctinc_0_10k_90 <-
alldat$pctinc_0_5k_90 +
alldat$pctinc_5k_10k_90
alldat <-
alldat[, !(names(alldat) %in%
c("pctinc_0_5k_90",
"pctinc_5k_10k_90"))]
alldat$pctinc_50k_60k_90 <-
alldat$pctinc_50k_55k_90 +
alldat$pctinc_55k_60k_90
alldat <-
alldat[, !(names(alldat) %in%
c("pctinc_50k_55k_90",
"pctinc_55k_60k_90"))]
alldat$pctinc_150k_more_10 <-
alldat$pctinc_150K_200K_10 +
alldat$pctinc_200K_more_10
alldat <-
alldat[, !(names(alldat) %in%
c("pctinc_150K_200K_10",
"pctinc_200K_more_10"))]
# correct acs data to 2013 adjusted values ####
alldat$medhhincome_10 <- alldat$medhhincome_10 * 1.01
alldat$medianvalue_10 <- alldat$medianvalue_10 * 1.01
alldat$medianrent_10 <- alldat$medianrent_10 * 1.01
names(alldat)
# reorder columns ####
alldat <- alldat[, c(1, 2:13, 132, 14:21, 133, 22:41,
42:86,
87:108, 134, 109:131)]
setwd("C:/Users/Jackie/Documents/GitHub/ungentry")
write.csv(alldat, file = "allcensusacsdata_2010boundaries.csv",
row.names = FALSE, na = '')
length(unique(alldat$tractid))
View(alldat)
########################################
#### Created by: Jackie Hwang 			####
#### Date: July 1, 2014 						####
#### Project: CFB-Ungentry 					####
#### Re: Merging ACS/Census Data 		####
#### using 2010 boundaries					####
########################################
# import datasets ####
setwd("C:/Users/Jackie/Documents/GitHub/ungentry/Census1990_Boston")
dat90 <- read.csv("Census1990_Boston_pcts_2010.csv")
setwd("C:/Users/Jackie/Documents/GitHub/ungentry/Census2000_Boston")
dat00 <- read.csv("Census2000_Boston_pcts_2010.csv")
setwd("C:/Users/Jackie/Documents/GitHub/ungentry/ACS0812_Boston")
dat10 <- read.csv("ACS0812_Boston.csv")
# merge all data ####
alldat <- merge(dat90, dat00,
by = "tractid10", all = TRUE,
suffixes = c("_90", "_00"))
alldat <- merge(alldat, dat10,
by = "tractid10", all.y = TRUE,
suffixes = c("", "_10"))
# add column year labels ####
for (i in 2:(which(names(alldat) == "totalpop_00") - 1)) {
if (substr(names(alldat)[i],
nchar(names(alldat)[i]) - 2,
nchar(names(alldat)[i])) !=
"_90") {
names(alldat)[i] <-
paste(names(alldat)[i],
"90",
sep = "_")
} else {
names(alldat)[i] <- names(alldat)[i]
}
}
for (i in (which(names(alldat) == "totalpop_00")):
(which(names(alldat) == "totalpop") - 1)) {
if (substr(names(alldat)[i],
nchar(names(alldat)[i]) - 2,
nchar(names(alldat)[i])) !=
"_00") {
names(alldat)[i] <-
paste(names(alldat)[i],
"00",
sep = "_")
} else {
names(alldat)[i] <- names(alldat)[i]
}
}
for (i in (which(names(alldat) == "totalpop")):ncol(alldat)) {
if (substr(names(alldat)[i],
nchar(names(alldat)[i]) - 2,
nchar(names(alldat)[i])) !=
"_10") {
names(alldat)[i] <-
paste(names(alldat)[i],
"10",
sep = "_")
} else {
names(alldat)[i] <- names(alldat)[i]
}
}
# drop tracts with no population
alldat <- alldat[alldat$totalpop_90 != 0 &
alldat$totalpop_00 != 0 &
alldat$totalpop_10 != 0 &
is.na(alldat$totalpop_90) == FALSE &
is.na(alldat$totalpop_00) == FALSE &
is.na(alldat$totalpop_10) == FALSE, ]
# drop tracts with no households
alldat <- alldat[alldat$households_90 != 0 &
alldat$households_00 != 0 &
alldat$households_10 != 0 &
is.na(alldat$households_90) == FALSE &
is.na(alldat$households_00) == FALSE &
is.na(alldat$households_10) == FALSE, ]
# create common variables where possible and reorder ####
alldat$pctinc_0_10k_90 <-
alldat$pctinc_0_5k_90 +
alldat$pctinc_5k_10k_90
alldat <-
alldat[, !(names(alldat) %in%
c("pctinc_0_5k_90",
"pctinc_5k_10k_90"))]
alldat$pctinc_50k_60k_90 <-
alldat$pctinc_50k_55k_90 +
alldat$pctinc_55k_60k_90
alldat <-
alldat[, !(names(alldat) %in%
c("pctinc_50k_55k_90",
"pctinc_55k_60k_90"))]
alldat$pctinc_150k_more_10 <-
alldat$pctinc_150K_200K_10 +
alldat$pctinc_200K_more_10
alldat <-
alldat[, !(names(alldat) %in%
c("pctinc_150K_200K_10",
"pctinc_200K_more_10"))]
# correct acs data to 2013 adjusted values ####
alldat$medhhincome_10 <- alldat$medhhincome_10 * 1.01
alldat$medianvalue_10 <- alldat$medianvalue_10 * 1.01
alldat$medianrent_10 <- alldat$medianrent_10 * 1.01
# reorder columns ####
alldat <- alldat[, c(1, 2:13, 132, 14:21, 133, 22:41,
42:86,
87:108, 134, 109:131)]
setwd("C:/Users/Jackie/Documents/GitHub/ungentry")
write.csv(alldat, file = "allcensusacsdata_2010boundaries.csv",
row.names = FALSE, na = '')
View(alldat)
